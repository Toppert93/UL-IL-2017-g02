package icrash.environment.operations.actAdministrator.outactAdministrator.oeSelectCategories {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

import icrash.environment

import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
	Operation Model {

		operation: icrash.environment.actAdministrator.outactAdministrator.oeSelectCategories(AetCategory:etCategory):ptBoolean{
		// include below the specification information (pre,post or ocl or prolog)
		preP{
  		let TheSystem: ctState in
  		let TheActor:actAdministrator in
  
 		 self.rnActor.rnSystem = TheSystem
 		 and self.rnActor = TheActor
  
		/* PreP01 */
  		and TheSystem.vpStarted = true
		/* PreP02 */
  		and TheActor.rnctAuthenticated.vpIsLogged = true
		}
		postF{
  		let TheSystem: ctState in
  		let TheActor:actAdministrator in
  		let CollctPointOfInterest:ctPointOfInterest in
  		self.rnActor.rnSystem = TheSystem
  		and self.rnActor = TheActor
		/* PostF01 */
		// need iterator
  		and if (CollctPointofInterest.get(i).category.equals(AetCatgory)) 
  			then true
  		else (false) 		
 		endif
 		}
 		postP{true}
		}
	}
}
